/*
 * bootstrap-tagsinput v0.8.0
 * 
 */

angular.module("bootstrap-tagsinput",[]).directive("bootstrapTagsinput",[function(){function o(e,t){if(t)return angular.isFunction(e.$parent[t])?e.$parent[t]:function(e){return e[t]}}return{restrict:"EA",scope:{model:"=ngModel"},template:"<select multiple></select>",replace:!1,link:function(l,n,r){$(function(){angular.isArray(l.model)||(l.model=[]);var i=$("select",n),e=r.typeaheadSource?r.typeaheadSource.split("."):null,e=e?1<e.length?l.$parent[e[0]][e[1]]:l.$parent[e[0]]:null;i.tagsinput(l.$parent[r.options||""]||{typeahead:{source:angular.isFunction(e)?e:null},itemValue:o(l,r.itemvalue),itemText:o(l,r.itemtext),confirmKeys:o(l,r.confirmkeys)?JSON.parse(r.confirmkeys):[13],tagClass:angular.isFunction(l.$parent[r.tagclass])?l.$parent[r.tagclass]:function(e){return r.tagclass}});for(var t=0;t<l.model.length;t++)i.tagsinput("add",l.model[t]);i.on("itemAdded",function(e){-1===l.model.indexOf(e.item)&&l.model.push(e.item)}),i.on("itemRemoved",function(e){e=l.model.indexOf(e.item);-1!==e&&l.model.splice(e,1)});var a=l.model.slice();l.$watch("model",function(){var e,t=l.model.filter(function(e){return-1===a.indexOf(e)}),n=a.filter(function(e){return-1===l.model.indexOf(e)});for(a=l.model.slice(),e=0;e<n.length;e++)i.tagsinput("remove",n[e]);for(i.tagsinput("refresh"),e=0;e<t.length;e++)i.tagsinput("add",t[e])},!0)})}}}]);
//# sourceMappingURL=bootstrap-tagsinput-angular.min.js.map